---
- hosts: webdb
  become: yes
  remote_user: ec2-user
  tasks:
    - name: Install Apache.
      yum: name={{ item }} state=present
      with_items:
      - httpd
      - php
      - php-mysql
      - openssl
      - mod_ssl
    - name: Make my directory tree readable
      file:
        path: /var/www/html/
        mode: u=rwX,g=rX,o=rX
        recurse: yes
        owner: apache
        group: apache
    - name: Make sure Apache is started now and at boot.
      service: name=httpd state=started enabled=yes 
    - name: FileCopyCertificate
      shell: /usr/bin/aws s3 cp {{ lookup('aws_ssm', 'ssl_certificate') }} /etc/pki/tls/certs/certificate.crt && chown root:root /etc/pki/tls/certs/certificate.crt && chmod 0644 /etc/pki/tls/certs/certificate.crt
    - name: FileCopyIntermediate
      shell: aws s3 cp {{ lookup('aws_ssm', 'ssl_intermediate') }} /etc/pki/tls/certs/intermediate.crt && chown root:root /etc/pki/tls/certs/intermediate.crt && chmod 0644 /etc/pki/tls/certs/intermediate.crt
    - name: FileCopyPrivateKey
      shell: aws s3 cp {{ lookup('aws_ssm', 'ssl_private_key') }} /etc/pki/tls/private/ca.key && chown root:root /etc/pki/tls/private/ca.key && chmod 0600 /etc/pki/tls/private/ca.key
    - name: FileCopySSLConf
      shell: aws s3 cp {{ lookup('aws_ssm', 'ssl_conf') }} /etc/httpd/conf.d/ssl.conf && chown root:root /etc/httpd/conf.d/ssl.conf && chmod 0644 /etc/httpd/conf.d/ssl.conf
    - name: FileCopyHttpdConf
      shell: aws s3 cp {{ lookup('aws_ssm', 'httpd_conf') }} /etc/httpd/conf/httpd.conf && chown root:root /etc/httpd/conf/httpd.conf && chmod 0644 /etc/httpd/conf/httpd.conf
    - name: FileCopyWebData
      shell: aws s3 sync "s3://{{ lookup('aws_ssm', 's3_code_bucket') }}" /var/www/html/
    - name: RestartHttpdService
      service: name=httpd state=restarted
    - name: Install MySQL Server
      yum: pkg={{ item }} state=latest 
      with_items: 
      - mysql-server
      - mysql-common
      - mysql-devel
      - gcc
      - python-devel
    - name: InstallMySQLPython
      pip: name=MySQL-python
    - name: StartDBService
      service: name=mysqld state=started enabled=yes
    - name: MySQLSetRootPass
      shell: mysql -e "UPDATE mysql.user SET Password = PASSWORD('{{ lookup('aws_ssm', 'mysql_rootpass') }}') WHERE User = 'root'"
    - name: MySQLCreateBlogUser
      mysql_user: name=blog password={{ lookup('aws_ssm', 'mysql_dbpass') }} priv=*.*:ALL,GRANT state=present
    - name: MySQLDropAnonUsers
      shell: mysql -e "DROP USER ''@'localhost'"
    - name: DropTestDB
      shell: mysql -e "DROP DATABASE test"
    - name: MySQLFlushPrivileges
      shell: mysql -e "FLUSH PRIVILEGES"
    - name: RestartDBService
      service: name=mysqld state=restarted
    - name: CopyDBBackupScript
      shell: aws s3 cp "s3://{{ lookup('aws_ssm', 's3_tfstate_bucket') }}/templates/sqlbackuptos3.sh" /root/ && chmod 0700 /root/sqlbackuptos3.sh
    - name: CopyMySQLBackupFile
      shell: aws s3 cp "s3://{{ lookup('aws_ssm', 's3_db_bucket') }}/latest.sql" /root/latest.sql
    - name: RestoreBackupFromS3
      shell: mysql -u "{{ lookup('aws_ssm', 'mysql_user') }}" -p{{ lookup('aws_ssm', 'mysql_rootpass') }} < /root/latest.sql
      register: result
    - debug: var=result
    - name: DeleteBackupFile
      file: path=/root/latest.sql state=absent
    - name: TestDBResults
      shell: mysql -u "{{ lookup('aws_ssm', 'mysql_user') }}" -p{{ lookup('aws_ssm', 'mysql_rootpass') }} -e 'SHOW DATABASES;'
      register: mysqlresult
    - debug: var=mysqlresult
    - name: CronSyncWebData
      cron: 
        name: "SyncWebData"
        minute: "40"
        hour: "23"
        job: "aws s3 sync {{ lookup('aws_ssm', 's3_code_bucket') }} /var/www/html/" 
    - name: CronSyncWebData
      cron:
        name: "CopyMySQLBackupToS3"
        minute: "50"
        hour: "23"
        job: "/root/sqlbackuptos3.sh"

#
#
#templates/root.cnf.j2
#
